<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	
	<!-- 配合全局事务管理器 让spring管理项目中的事务 spring管理事务有两种方式 1、编程式事务：直接在代码中开启事务和提交事务，控制灵活，但是不便于spring进行管理和维护 
		2、声明式事务：使用spring来对事务进行管理，使用xml或者注解来对事务进行配置，是业务逻辑和事务管理隔离，实现解耦合 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 配置事务的传播特性 传播特性：当一个业务员方法调用了另外一个业务方法的时候， 两个业务方法中的事务应该如何处理 事务传播特性一共有七种，默认是propagation_required -->
		<tx:attributes>
			<!-- 支持当前事务，如果当前方法没有事务，则去创建一个事务 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- aop配置，给哪些类中那些方法配置方法 -->
	<aop:config>
		<!-- 切入点 包下面的所有类的所有方法 -->
		<aop:pointcut expression="execution(* com.lanou.service.*.*(..))"
			id="pointCut" />
		<!-- 通知和切入点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut" />
	</aop:config>
</beans>








