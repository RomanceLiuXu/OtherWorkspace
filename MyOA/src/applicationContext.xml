<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	<!-- 开启注解扫描 -->
	<context:component-scan base-package="com.sumi" />
	<!-- 加载jdbc.properties配置文件
	     web应用程序加载配置文件前面带上classpath: 
	     表示是去类路径下面加载 
	 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置数据库连接池:c3p0 -->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="50" />
	</bean>
	<!-- 配置SessionFactoryBean
	     相当于hibernate.cfg.xml文件中配置， 
	     主要用于构建sessionFactory对象 
		spring-orm.jar -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 加载数据源 -->
		<property name="dataSource" ref="c3p0"/>
		<!-- hibernate其他的配置信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 方言：必须配置 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- 是否显示sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 是否格式化显示sql -->
				<prop key="hibernate.format_sql">true</prop>

				<!-- 开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">
					true
				</prop>
				<!-- 指定二级缓存提供商hibernate-ehcache包下 -->
				<prop key="hibernate.cache.region.factory_class">
					org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<!-- 执行二级缓存配置文件 -->
				<prop key="hibenate.cache.configurationResourceName">
					ehcache.xml
				</prop>
				<!-- 开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!--给当前线程绑定事务 -->
				<prop key="hibernate.current_session_context_class">
					org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		<!-- 关联映射文件 -->
		<property name="mappingLocations">
			<value>classpath:com/sumi/bean/*.hbm.xml</value>
		</property>
	</bean>
	<!-- 配置HibernateTemplate
	 一个操作数据库的对象 
	 spring-orm > hibernate4下面
    -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
	<!-- 加载sessionFactory -->
	<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	<!-- 配置全局事务管理器
	     让spring管理项目中的事物
	     spring管理事物有两种方式：
	     1、编程式事物
	        直接在代码中开启事务和提交事务控制灵活，但是不便于spring进行管理和维护。
	     2、声明式事物(推荐)
	        使用springAOP来对事物进行管理，使用xml配置或者注解来对事物进行配置，使业务逻辑
	        和事物管理隔离，实现解耦合。
	 -->
	 <!-- 事物管理器 spring-orm的hibernate4下面 -->
	 <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	 <property name="sessionFactory" ref="sessionFactory"/>
	 </bean>
	 <!-- 事物通知
	      transaction-manager写上面的事物管理器的bean组件的id
	  -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	<!-- 配置事物的传播特性
	     传播特性：当一个当有业务方法去调用了另外一个业务方法的时候，
	     两个方法中的是事物应该怎么处理。
	     事物传播特性总共有七种，默认是PROPAGATION_REQUIRED。
	 -->
	<tx:attributes>
	<!-- 支持当前事物，如果当前方法没有事物则创建一个 -->
	<tx:method name="add*" propagation="REQUIRED"/>
	<tx:method name="update*" propagation="REQUIRED"/>
	<tx:method name="delete*" propagation="REQUIRED"/>
	<tx:method name="find*" propagation="REQUIRED"/>
	<tx:method name="save*" propagation="REQUIRED"/>
	<tx:method name="submit*" propagation="REQUIRED"/>
	<tx:method name="cancel*" propagation="REQUIRED"/>
	</tx:attributes>
	</tx:advice>
	
	<!-- AOP配置，给哪些类中的哪些方法配置事物 -->
	<aop:config>
	<!-- 切入点 -->
	<aop:pointcut expression="execution(* com.sumi.service.impl.*.*(..))" id="pointCut"/>
	<!-- 通知和切入点 -->
	<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
	</aop:config>
</beans>








