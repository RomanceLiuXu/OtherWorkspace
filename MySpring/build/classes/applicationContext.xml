<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	 xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<bean id="msg" class="com.liuxu.bean.MesssgeBean">
		<!-- 基本数据类型的依赖注入 -->
		<property name="name" value="小明"></property>
		<property name="age" value="15"></property>
		<!-- list集合依赖注入 -->
		<property name="list">
			<list>
				<value>小美</value>
				<value>小中</value>
			</list>
		</property>
		<!-- map集合依赖注入 -->
		<property name="map">
			<map>
				<entry key="1001" value="map集合1"></entry>
				<entry key="1002" value="map集合2"></entry>
			</map>
		</property>
		<!-- set集合依赖注入 -->
		<property name="set">
			<set>
				<value>set数据1</value>
				<value>set数据2</value>
			</set>
		</property>
		<!-- properties依赖注入 -->
		<property name="properties">
			<props>
				<prop key="username">rrot</prop>
				<prop key="psw">1234</prop>
			</props>
		</property>
	</bean>

	<!-- 在外部定义集合，然后再引入 -->
	<util:list id="mlist">
			<value>外部list1</value>
			<value>外部list2</value>
	</util:list>

	<util:map id="mmap">
		<entry key="1003" value="外部map1"></entry>
		<entry key="1004" value="外部map2"></entry>
	</util:map>
      
     <util:set id="mset">
     <value>外部set1</value>
     <value>外部set2</value>
     </util:set> 
      
      <util:properties id="mpops">
      <prop key="url">baidu.com</prop>
      <prop key="address">陕西西安</prop>
      </util:properties>
      
      <!-- 定义MesssgeBean 引入外部集合数据 -->
      <bean id="msg2" class="com.liuxu.bean.MesssgeBean">
      <property name="name" value="小红"></property>
      <property name="age" value="12"></property>
      <property name="list" ref="mlist"></property>
      <property name="set" ref="mset"></property>
      <property name="map" ref="mmap"></property>
      <property name="properties" ref="mpops"></property>
      </bean>
      
      <bean id="stu1" class="com.liuxu.bean.Student" lazy-init="true">
      <property name="name" value="无双"></property>
      <property name="age" value="12"></property>
      </bean>
      <!-- 开启注解扫描 -->
      <context:component-scan base-package="com.liuxu"></context:component-scan>
      
      <!-- 外部引入全局的properties -->
      <context:property-placeholder location="jdbc.properties"/>
      
      <!-- 数据库连接池的配置 dbcp -->
      <bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
      <property name="driverClassName" value="${jdbc.driver}"></property>
      <property name="url" value="${jdbc.url}"></property>
      <property name="username" value="${jdbc.username}"></property>
      <property name="password" value="${jdbc.password}"></property>
      </bean>
      
      <!--配置jdbcTemplate模板
      相当于Hibernate中的session，用来操作数据库
        -->
      <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      <property name="dataSource" ref="dbcp"></property>
      </bean>
      
      <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
      
      <!-- Aop配置 -->
      <!-- 切面类对象配置 -->
      <bean id="empAspect" class="com.liuxu.Aspect.AopAspect"></bean>
       <aop:config>
      <!-- 配置切入点表达式  找到目标方法-->
      <aop:pointcut expression="execution(* com.liuxu.action.EmpAction.showAll(..))" id="point"/>
      <!-- 定义切面 -->
      <aop:aspect id="maspecf" ref="empAspect">
      <!-- 定义前置通知 -->
      <aop:before method="MyBefore" pointcut-ref="point"/>
      <!-- 配置后置通知 -->
      <aop:after-returning method="MyAfter" pointcut-ref="point"/>
      <!-- 配置异常通知 -->
      <aop:after-throwing method="MyExpection" pointcut-ref="point" throwing="e"/>
      <!-- 配置环绕通知 -->
      <aop:around method="MyAround"  pointcut-ref="point"/>
      </aop:aspect>
      </aop:config>
      
      
</beans>








