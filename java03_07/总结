国际化：
1.概念
是程序在不做任何修改的情况下，可以在不同的国家和地区和不同的语言环境下按照当地的语言和格式习惯显示字符
2.步骤：
a.创建文办格式的资源文件（可以存在多个），
  文件的格式：基名_语言代码_国家代码.properties
b.在资源文件中以key=value的格式编写需要国际化的数据
c.在struts.xml中打开国际化，注意value值为基名
d.在前端页面引用 

文件上传
  1.原理:
  a.获取前端传入的需要上传的文件(属性，set和get方法)
  b.根据获取的文件创建一个文件输入流对象(用来实现文件的读取操作)
  c.获取服务上传的路径
  d.根据服务器上传路径创建一个文件对象
  e.判断文件是否存在，不存在则创建一个文件夹
  f.根据服务器上传路径及需要上传的文件的文件名创建一个文件输出流对象
  g.创建一个读取数据的字节数组
  h.根据输入流对象循环读入需要上传的文件，并使用输出流对象写入该文件
  i.关闭流对象
  
  3.在struts2中实现上传的步骤
  
  a.获取需要上传的文件(属性)
    private File file;
	private String fileFileName;
	
  b.使用sevletContext对象获取realpath上传的路径
  	String path = ServletActionContext.getServletContext().getRealPath("myimg");
  
  c.使用FileUtil工具实现文件上传的操作(copyFile)
  FileUtils.copyFile(file, new File(path + "//" + fileFileName));
  
  d.在对应请求的action中使用文件操作的拦截器配置相关的过滤条件(param)
     <interceptor-ref name="defaultStack">
        <param name="fileUpload.allowedExtensions">png,jpg</param>
     </interceptor-ref>
     
  文件下载
  a.准备下载文件的输入流对象
  b.获取前端传来的下载文件的名称
  c.编写实现下载文件的接口
  d.在strutrs.xml文件中配置下载功能的接口
    d.1:指定result节点type的属性为stream
    d.2:配置result节点中的相关参数
        contentType: pplication/octet-stream
        inputName:action中的输入流对象名字
        contentDisposition:attachment;fileName="${filename}"
        bufferSize:大小(4096)
        
         <!-- 文件下载 -->
		<action name="three" class="com.lanou.Demo3Action" method="method1">
			<result name="success" type="stream">
			<!-- 指定下载文件的类型
			 通常指设置为可执行文件即可：application/octet-stream
			 -->
			<param name="contentType">application/octet-stream</param>
			<!-- 指定文件下载的输入流对象 -->
			<param name="inputName">inputStream</param>
			<!-- 指定下载的文件是否显示，和下载的文件名称 -->
			<param name="contentDisposition">attachment;fileName="${filename}"</param>
			<!-- 指定文件的缓存大小 -->
			<param name="bufferSize">4000</param>
			</result>
		</action>
   